<?php

require_once __DIR__ . '/vendor/autoload.php';

echo "üéØ Vue PDF Generation - Usage Examples & Implementation Guide\n\n";

echo "üìã 1. Basic Vue Component Integration:\n";
echo "=====================================\n\n";

echo "Add PdfExportButton to any Vue component:\n\n";

echo "```vue\n";
echo "<template>\n";
echo "  <div class=\"dashboard\">\n";
echo "    <h1>My Dashboard</h1>\n";
echo "    \n";
echo "    <!-- Your dashboard content -->\n";
echo "    <div class=\"metrics\">\n";
echo "      <div class=\"metric-card\">Total Users: {{ data.totalUsers }}</div>\n";
echo "      <div class=\"metric-card\">Revenue: \${{ data.revenue }}</div>\n";
echo "    </div>\n";
echo "    \n";
echo "    <!-- PDF Export Button -->\n";
echo "    <PdfExportButton\n";
echo "      :component-route=\"'dashboard.analytics'\"\n";
echo "      :data=\"data\"\n";
echo "      :has-charts=\"true\"\n";
echo "      :default-options=\"{\n";
echo "        format: 'A4',\n";
echo "        orientation: 'landscape',\n";
echo "        title: 'Analytics Dashboard Report'\n";
echo "      }\"\n";
echo "      @export-started=\"onExportStarted\"\n";
echo "      @export-completed=\"onExportCompleted\"\n";
echo "    />\n";
echo "  </div>\n";
echo "</template>\n";
echo "\n";
echo "<script setup>\n";
echo "import PdfExportButton from '@/Components/PdfExportButton.vue'\n";
echo "\n";
echo "const props = defineProps({\n";
echo "  data: Object\n";
echo "})\n";
echo "\n";
echo "const onExportStarted = () => {\n";
echo "  console.log('PDF export started')\n";
echo "}\n";
echo "\n";
echo "const onExportCompleted = (result) => {\n";
echo "  console.log('PDF ready:', result.download_url)\n";
echo "}\n";
echo "</script>\n";
echo "```\n\n";

echo "üìä 2. Sentiment Analysis PDF Example:\n";
echo "====================================\n\n";

echo "Generate sentiment analysis reports:\n\n";

echo "```javascript\n";
echo "// Frontend JavaScript\n";
echo "const generateSentimentPdf = async () => {\n";
echo "  const response = await fetch('/api/vue-pdf/sentiment-dashboard', {\n";
echo "    method: 'POST',\n";
echo "    headers: {\n";
echo "      'Content-Type': 'application/json',\n";
echo "      'X-CSRF-TOKEN': document.querySelector('meta[name=\"csrf-token\"]').content\n";
echo "    },\n";
echo "    body: JSON.stringify({\n";
echo "      sentiment_data: {\n";
echo "        daily_aggregates: [\n";
echo "          { date: '2024-01-01', sentiment: 0.65, volume: 1250 },\n";
echo "          { date: '2024-01-02', sentiment: 0.72, volume: 1180 }\n";
echo "        ],\n";
echo "        platform_breakdown: {\n";
echo "          twitter: { sentiment: 0.68, posts: 850 },\n";
echo "          reddit: { sentiment: 0.55, posts: 400 }\n";
echo "        }\n";
echo "      },\n";
echo "      options: {\n";
echo "        format: 'A4',\n";
echo "        orientation: 'landscape',\n";
echo "        title: 'Sentiment Analysis Report'\n";
echo "      }\n";
echo "    })\n";
echo "  })\n";
echo "  \n";
echo "  const result = await response.json()\n";
echo "  if (result.success) {\n";
echo "    window.open(result.result.download_url, '_blank')\n";
echo "  }\n";
echo "}\n";
echo "```\n\n";

echo "üõ†Ô∏è 3. Custom Vue PDF Pages:\n";
echo "============================\n\n";

echo "Create specialized PDF Vue components:\n\n";

echo "```vue\n";
echo "<!-- resources/js/Pages/Pdf/CustomReport.vue -->\n";
echo "<template>\n";
echo "  <div class=\"pdf-page\" :class=\"{ 'pdf-mode': pdfMode }\">\n";
echo "    <header class=\"pdf-header\">\n";
echo "      <h1>{{ title }}</h1>\n";
echo "      <p class=\"generated-date\">Generated: {{ formattedDate }}</p>\n";
echo "    </header>\n";
echo "    \n";
echo "    <main class=\"pdf-content\">\n";
echo "      <section class=\"metrics-grid\">\n";
echo "        <div \n";
echo "          v-for=\"metric in metrics\" \n";
echo "          :key=\"metric.name\"\n";
echo "          class=\"metric-card\"\n";
echo "        >\n";
echo "          <h3>{{ metric.name }}</h3>\n";
echo "          <p class=\"metric-value\">{{ metric.value }}</p>\n";
echo "        </div>\n";
echo "      </section>\n";
echo "      \n";
echo "      <section v-if=\"chartData\" class=\"charts-section\">\n";
echo "        <h2>Analytics Charts</h2>\n";
echo "        <div class=\"chart-container\">\n";
echo "          <canvas ref=\"chartCanvas\" width=\"800\" height=\"400\"></canvas>\n";
echo "        </div>\n";
echo "      </section>\n";
echo "    </main>\n";
echo "    \n";
echo "    <footer class=\"pdf-footer\">\n";
echo "      <p>¬© 2024 AI Blockchain Analytics</p>\n";
echo "    </footer>\n";
echo "  </div>\n";
echo "</template>\n";
echo "\n";
echo "<script setup>\n";
echo "import { computed, onMounted, ref } from 'vue'\n";
echo "import Chart from 'chart.js/auto'\n";
echo "\n";
echo "const props = defineProps({\n";
echo "  title: String,\n";
echo "  metrics: Array,\n";
echo "  chartData: Object,\n";
echo "  pdfMode: { type: Boolean, default: false }\n";
echo "})\n";
echo "\n";
echo "const chartCanvas = ref(null)\n";
echo "const formattedDate = computed(() => \n";
echo "  new Date().toLocaleDateString('en-US', {\n";
echo "    year: 'numeric',\n";
echo "    month: 'long',\n";
echo "    day: 'numeric'\n";
echo "  })\n";
echo ")\n";
echo "\n";
echo "onMounted(() => {\n";
echo "  if (props.chartData && chartCanvas.value) {\n";
echo "    new Chart(chartCanvas.value, props.chartData)\n";
echo "  }\n";
echo "})\n";
echo "</script>\n";
echo "\n";
echo "<style scoped>\n";
echo ".pdf-page {\n";
echo "  max-width: 210mm;\n";
echo "  margin: 0 auto;\n";
echo "  padding: 20px;\n";
echo "  font-family: 'Arial', sans-serif;\n";
echo "}\n";
echo "\n";
echo ".pdf-mode {\n";
echo "  /* Styles specific to PDF rendering */\n";
echo "  background: white;\n";
echo "  color: #000;\n";
echo "  print-color-adjust: exact;\n";
echo "  -webkit-print-color-adjust: exact;\n";
echo "}\n";
echo "\n";
echo ".metrics-grid {\n";
echo "  display: grid;\n";
echo "  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n";
echo "  gap: 20px;\n";
echo "  margin-bottom: 30px;\n";
echo "}\n";
echo "\n";
echo ".metric-card {\n";
echo "  border: 1px solid #ddd;\n";
echo "  padding: 15px;\n";
echo "  border-radius: 8px;\n";
echo "  text-align: center;\n";
echo "}\n";
echo "\n";
echo ".pdf-footer {\n";
echo "  margin-top: 40px;\n";
echo "  text-align: center;\n";
echo "  color: #666;\n";
echo "  font-size: 12px;\n";
echo "}\n";
echo "</style>\n";
echo "```\n\n";

echo "üîß 4. Backend API Integration:\n";
echo "==============================\n\n";

echo "Create custom PDF generation endpoints:\n\n";

echo "```php\n";
echo "// app/Http/Controllers/CustomPdfController.php\n";
echo "<?php\n";
echo "\n";
echo "namespace App\\Http\\Controllers;\n";
echo "\n";
echo "use App\\Services\\VuePdfGenerationService;\n";
echo "use Illuminate\\Http\\Request;\n";
echo "\n";
echo "class CustomPdfController extends Controller\n";
echo "{\n";
echo "    public function generateAnalyticsReport(Request \$request)\n";
echo "    {\n";
echo "        \$validated = \$request->validate([\n";
echo "            'date_range' => 'required|array',\n";
echo "            'metrics' => 'required|array',\n";
echo "            'include_charts' => 'boolean'\n";
echo "        ]);\n";
echo "        \n";
echo "        \$pdfService = app(VuePdfGenerationService::class);\n";
echo "        \n";
echo "        \$result = \$pdfService->generateFromVueComponent(\n";
echo "            'pdf.custom-report',\n";
echo "            [\n";
echo "                'title' => 'Analytics Report',\n";
echo "                'metrics' => \$validated['metrics'],\n";
echo "                'date_range' => \$validated['date_range'],\n";
echo "                'chart_data' => \$this->prepareChartData(\$validated)\n";
echo "            ],\n";
echo "            [\n";
echo "                'format' => 'A4',\n";
echo "                'orientation' => 'portrait',\n";
echo "                'filename' => 'analytics-report-' . date('Y-m-d') . '.pdf'\n";
echo "            ]\n";
echo "        );\n";
echo "        \n";
echo "        return response()->json([\n";
echo "            'success' => true,\n";
echo "            'download_url' => \$result['download_url']\n";
echo "        ]);\n";
echo "    }\n";
echo "}\n";
echo "```\n\n";

echo "‚öôÔ∏è 5. Environment Configuration:\n";
echo "================================\n\n";

echo "Add to your .env file:\n\n";

echo "```bash\n";
echo "# PDF Generation Settings\n";
echo "PDF_ENGINE=auto  # auto, browserless, dompdf\n";
echo "PDF_DEFAULT_FORMAT=A4\n";
echo "PDF_DEFAULT_ORIENTATION=portrait\n";
echo "PDF_STORAGE_DISK=public\n";
echo "PDF_CLEANUP_DAYS=7\n";
echo "\n";
echo "# Browserless Configuration (Optional)\n";
echo "BROWSERLESS_ENABLED=true\n";
echo "BROWSERLESS_URL=http://browserless:3000\n";
echo "BROWSERLESS_TIMEOUT=30\n";
echo "BROWSERLESS_MAX_RETRIES=2\n";
echo "BROWSERLESS_CONCURRENCY=3\n";
echo "\n";
echo "# For hosted Browserless service\n";
echo "BROWSERLESS_API_KEY=your-api-key\n";
echo "```\n\n";

echo "üê≥ 6. Docker Integration:\n";
echo "========================\n\n";

echo "Add Browserless service to docker-compose.yml:\n\n";

echo "```yaml\n";
echo "version: '3.8'\n";
echo "\n";
echo "services:\n";
echo "  app:\n";
echo "    # Your existing app service\n";
echo "    depends_on:\n";
echo "      - browserless\n";
echo "    \n";
echo "  browserless:\n";
echo "    image: browserless/chrome:1.61.0-puppeteer-19.2.2\n";
echo "    container_name: ai_blockchain_browserless\n";
echo "    restart: unless-stopped\n";
echo "    ports:\n";
echo "      - '3000:3000'\n";
echo "    environment:\n";
echo "      - DEBUG=browserless:*\n";
echo "      - MAX_CONCURRENT_SESSIONS=10\n";
echo "      - CONNECTION_TIMEOUT=60000\n";
echo "      - MAX_QUEUE_LENGTH=50\n";
echo "      - PREBOOT_CHROME=true\n";
echo "      - DEFAULT_BLOCK_ADS=true\n";
echo "      - DEFAULT_IGNORE_HTTPS_ERRORS=true\n";
echo "    volumes:\n";
echo "      - /dev/shm:/dev/shm\n";
echo "    networks:\n";
echo "      - app-network\n";
echo "    healthcheck:\n";
echo "      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']\n";
echo "      interval: 30s\n";
echo "      timeout: 10s\n";
echo "      retries: 3\n";
echo "```\n\n";

echo "üß™ 7. Testing Your Implementation:\n";
echo "=================================\n\n";

echo "Test commands:\n\n";

echo "```bash\n";
echo "# 1. Basic PDF generation test\n";
echo "docker compose exec app php artisan pdf:test --type=dashboard\n";
echo "\n";
echo "# 2. Test Vue component PDF\n";
echo "curl -X POST http://localhost:8000/api/vue-pdf/generate \\\n";
echo "  -H \"Content-Type: application/json\" \\\n";
echo "  -H \"Accept: application/json\" \\\n";
echo "  -d '{\n";
echo "    \"component_route\": \"dashboard.analytics\",\n";
echo "    \"data\": {\n";
echo "      \"title\": \"Test Dashboard\",\n";
echo "      \"metrics\": [\n";
echo "        {\"name\": \"Users\", \"value\": \"1,234\"},\n";
echo "        {\"name\": \"Revenue\", \"value\": \"\$45,678\"}\n";
echo "      ]\n";
echo "    },\n";
echo "    \"options\": {\n";
echo "      \"format\": \"A4\",\n";
echo "      \"orientation\": \"portrait\",\n";
echo "      \"title\": \"Dashboard Report\"\n";
echo "    }\n";
echo "  }'\n";
echo "\n";
echo "# 3. Check PDF statistics\n";
echo "curl http://localhost:8000/api/pdf/statistics\n";
echo "\n";
echo "# 4. Test browserless health\n";
echo "curl http://localhost:3000/health\n";
echo "```\n\n";

echo "‚ú® 8. Production Deployment Tips:\n";
echo "=================================\n\n";

echo "üìã Checklist for production:\n\n";
echo "‚ñ° Configure PDF storage (S3, local, etc.)\n";
echo "‚ñ° Set up PDF cleanup schedule\n";
echo "‚ñ° Monitor PDF generation queue\n";
echo "‚ñ° Configure browserless scaling\n";
echo "‚ñ° Set up error monitoring (Sentry)\n";
echo "‚ñ° Test with real user data\n";
echo "‚ñ° Implement rate limiting\n";
echo "‚ñ° Set up automated backups\n";
echo "‚ñ° Configure SSL certificates\n";
echo "‚ñ° Test performance under load\n\n";

echo "üéØ Your Vue PDF generation system includes:\n";
echo "===========================================\n\n";

echo "‚úÖ Ready-to-use components:\n";
echo "   ‚Ä¢ PdfExportButton with full customization\n";
echo "   ‚Ä¢ Multiple PDF page templates\n";
echo "   ‚Ä¢ Progress tracking and user feedback\n\n";

echo "‚úÖ Backend services:\n";
echo "   ‚Ä¢ Dual PDF engines (Browserless + DomPDF)\n";
echo "   ‚Ä¢ Secure token-based previews\n";
echo "   ‚Ä¢ Comprehensive error handling\n";
echo "   ‚Ä¢ Statistics and monitoring\n\n";

echo "‚úÖ API endpoints:\n";
echo "   ‚Ä¢ General PDF generation\n";
echo "   ‚Ä¢ Specialized reports (sentiment, dashboard)\n";
echo "   ‚Ä¢ Batch processing\n";
echo "   ‚Ä¢ Statistics and health checks\n\n";

echo "üöÄ Start using immediately:\n";
echo "===========================\n\n";
echo "1. Add <PdfExportButton> to any Vue component\n";
echo "2. Configure your PDF options\n";
echo "3. Test with sample data\n";
echo "4. Deploy to production\n\n";

echo "‚úÖ Your comprehensive Vue-to-PDF system is ready!\n";