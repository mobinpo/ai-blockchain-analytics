apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-blockchain-analytics-app
  namespace: ai-blockchain-analytics
  labels:
    app.kubernetes.io/name: ai-blockchain-analytics
    app.kubernetes.io/component: app
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ai-blockchain-analytics
      app.kubernetes.io/component: app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ai-blockchain-analytics
        app.kubernetes.io/component: app
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "2112"
        prometheus.io/path: "/metrics"
    spec:
      initContainers:
      - name: wait-for-dependencies
        image: busybox:1.36
        command: ['sh', '-c']
        args:
        - |
          echo "Waiting for PostgreSQL..."
          until nc -z postgres-service 5432; do
            echo "PostgreSQL not ready, waiting..."
            sleep 2
          done
          echo "PostgreSQL is ready!"
          
          echo "Waiting for Redis..."
          until nc -z redis-service 6379; do
            echo "Redis not ready, waiting..."
            sleep 2
          done
          echo "Redis is ready!"
          
          echo "All dependencies are ready!"
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
          limits:
            cpu: 50m
            memory: 32Mi
      
      containers:
      - name: app
        image: ai-blockchain-analytics:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 2112
          protocol: TCP
        - name: status
          containerPort: 2114
          protocol: TCP
        
        env:
        # Load configuration from ConfigMap
        - name: APP_NAME
          valueFrom:
            configMapKeyRef:
              name: ai-blockchain-analytics-config
              key: APP_NAME
        - name: APP_ENV
          valueFrom:
            configMapKeyRef:
              name: ai-blockchain-analytics-config
              key: APP_ENV
        - name: APP_DEBUG
          valueFrom:
            configMapKeyRef:
              name: ai-blockchain-analytics-config
              key: APP_DEBUG
        - name: APP_URL
          valueFrom:
            configMapKeyRef:
              name: ai-blockchain-analytics-config
              key: APP_URL
        - name: DB_CONNECTION
          valueFrom:
            configMapKeyRef:
              name: ai-blockchain-analytics-config
              key: DB_CONNECTION
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: ai-blockchain-analytics-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: ai-blockchain-analytics-config
              key: DB_PORT
        - name: DB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: ai-blockchain-analytics-config
              key: DB_DATABASE
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: ai-blockchain-analytics-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: ai-blockchain-analytics-config
              key: REDIS_PORT
        - name: REDIS_DB
          valueFrom:
            configMapKeyRef:
              name: ai-blockchain-analytics-config
              key: REDIS_DB
        - name: CACHE_DRIVER
          valueFrom:
            configMapKeyRef:
              name: ai-blockchain-analytics-config
              key: CACHE_DRIVER
        - name: SESSION_DRIVER
          valueFrom:
            configMapKeyRef:
              name: ai-blockchain-analytics-config
              key: SESSION_DRIVER
        - name: QUEUE_CONNECTION
          valueFrom:
            configMapKeyRef:
              name: ai-blockchain-analytics-config
              key: QUEUE_CONNECTION
        
        # Load secrets
        - name: APP_KEY
          valueFrom:
            secretKeyRef:
              name: ai-blockchain-analytics-secrets
              key: APP_KEY
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: ai-blockchain-analytics-secrets
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ai-blockchain-analytics-secrets
              key: DB_PASSWORD
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ai-blockchain-analytics-secrets
              key: REDIS_PASSWORD
        
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        
        volumeMounts:
        - name: storage
          mountPath: /var/www/html/storage/app/public
        - name: logs
          mountPath: /var/www/html/storage/logs
        
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 82  # www-data
          runAsGroup: 82
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
      
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: ai-blockchain-analytics-storage
      - name: logs
        emptyDir: {}
      
      securityContext:
        fsGroup: 82  # www-data
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - ai-blockchain-analytics
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - app
              topologyKey: kubernetes.io/hostname
