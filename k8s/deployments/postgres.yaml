apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: ai-blockchain-analytics
type: Opaque
data:
  POSTGRES_DB: YWlfYmxvY2tjaGFpbl9hbmFseXRpY3M=  # ai_blockchain_analytics
  POSTGRES_USER: cG9zdGdyZXM=  # postgres
  POSTGRES_PASSWORD: cGFzc3dvcmQ=  # password
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: ai-blockchain-analytics
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp2  # AWS EBS GP2, change as needed
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: ai-blockchain-analytics
  labels:
    app: postgres
    component: database
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        component: database
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: postgres-init
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 2Gi
        livenessProbe:
          exec:
            command:
              - pg_isready
              - -U
              - postgres
              - -d
              - ai_blockchain_analytics
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
              - pg_isready
              - -U
              - postgres
              - -d
              - ai_blockchain_analytics
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
      - name: postgres-init
        configMap:
          name: postgres-init-config
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: ai-blockchain-analytics
  labels:
    app: postgres
    component: database
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres
  selector:
    app: postgres
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-config
  namespace: ai-blockchain-analytics
data:
  01-create-test-db.sql: |
    -- Create test database for running tests
    CREATE DATABASE ai_blockchain_analytics_test;
    
    -- Create additional user for application
    CREATE USER ai_app WITH PASSWORD 'ai_app_password';
    GRANT ALL PRIVILEGES ON DATABASE ai_blockchain_analytics TO ai_app;
    GRANT ALL PRIVILEGES ON DATABASE ai_blockchain_analytics_test TO ai_app;
    
    -- Enable necessary extensions
    \c ai_blockchain_analytics;
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    CREATE EXTENSION IF NOT EXISTS "pg_stat_statements";
    
    \c ai_blockchain_analytics_test;
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    CREATE EXTENSION IF NOT EXISTS "pg_stat_statements";