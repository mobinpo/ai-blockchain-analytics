{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://ai-blockchain-analytics.com/schemas/vulnerability-finding.json",
  "title": "Smart Contract Vulnerability Finding",
  "description": "OWASP-style JSON schema for smart contract security vulnerability findings",
  "type": "object",
  "required": [
    "id",
    "severity",
    "title",
    "category",
    "description",
    "recommendation",
    "location",
    "confidence",
    "timestamp"
  ],
  "properties": {
    "id": {
      "type": "string",
      "description": "Unique identifier for this finding",
      "pattern": "^[a-zA-Z0-9_-]+$",
      "examples": ["VULN_001", "REENT_125", "ACCESS_042"]
    },
    "severity": {
      "type": "string",
      "enum": ["CRITICAL", "HIGH", "MEDIUM", "LOW", "INFO"],
      "description": "Severity level following OWASP risk rating methodology"
    },
    "title": {
      "type": "string",
      "maxLength": 200,
      "description": "Concise title describing the vulnerability",
      "examples": ["Reentrancy Attack Vulnerability", "Integer Overflow in Transfer Function"]
    },
    "category": {
      "type": "string",
      "enum": [
        "REENTRANCY",
        "INTEGER_OVERFLOW", 
        "INTEGER_UNDERFLOW",
        "ACCESS_CONTROL",
        "DELEGATECALL",
        "SELFDESTRUCT",
        "TIMESTAMP_DEPENDENCE",
        "WEAK_RANDOMNESS",
        "DENIAL_OF_SERVICE",
        "FRONT_RUNNING",
        "FLASH_LOAN_ATTACK",
        "PRICE_MANIPULATION",
        "RUG_PULL_RISK",
        "GOVERNANCE_ATTACK",
        "SANDWICH_ATTACK",
        "MEV_EXTRACTION",
        "LOGIC_ERROR",
        "UNINITIALIZED_STORAGE",
        "UNSAFE_EXTERNAL_CALL",
        "UNCHECKED_RETURN_VALUE",
        "GAS_LIMIT_ISSUES",
        "TX_ORIGIN_AUTHENTICATION",
        "SHORT_ADDRESS_ATTACK",
        "SIGNATURE_MALLEABILITY",
        "ERC_COMPLIANCE_VIOLATION",
        "UPGRADE_SAFETY",
        "ORACLE_MANIPULATION",
        "CENTRALIZATION_RISK",
        "KEY_MANAGEMENT",
        "PRIVACY_LEAK"
      ],
      "description": "Primary vulnerability category from smart contract security taxonomy"
    },
    "subcategory": {
      "type": "string",
      "maxLength": 100,
      "description": "More specific subcategory if applicable",
      "examples": ["Cross-function Reentrancy", "Arithmetic Overflow", "Unrestricted Delegatecall"]
    },
    "description": {
      "type": "string",
      "maxLength": 2000,
      "description": "Detailed description of the vulnerability and its implications"
    },
    "recommendation": {
      "type": "object",
      "required": ["summary", "details"],
      "properties": {
        "summary": {
          "type": "string",
          "maxLength": 500,
          "description": "Brief actionable recommendation"
        },
        "details": {
          "type": "string",
          "maxLength": 2000,
          "description": "Detailed remediation steps and best practices"
        },
        "code_example": {
          "type": "string",
          "description": "Example of secure code implementation"
        },
        "references": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["title", "url"],
            "properties": {
              "title": {
                "type": "string",
                "maxLength": 200
              },
              "url": {
                "type": "string",
                "format": "uri"
              },
              "type": {
                "type": "string",
                "enum": ["documentation", "best_practice", "cve", "advisory", "research_paper"]
              }
            }
          },
          "maxItems": 10
        }
      },
      "additionalProperties": false
    },
    "location": {
      "type": "object",
      "required": ["file"],
      "properties": {
        "file": {
          "type": "string",
          "description": "Contract file name or identifier"
        },
        "line": {
          "type": "integer",
          "minimum": 1,
          "description": "Line number where vulnerability was detected"
        },
        "column": {
          "type": "integer",
          "minimum": 1,
          "description": "Column position within the line"
        },
        "function": {
          "type": "string",
          "description": "Function name where vulnerability exists"
        },
        "contract": {
          "type": "string",
          "description": "Contract name"
        },
        "code_snippet": {
          "type": "string",
          "maxLength": 1000,
          "description": "Relevant code snippet showing the vulnerability"
        }
      },
      "additionalProperties": false
    },
    "confidence": {
      "type": "object",
      "required": ["level", "score"],
      "properties": {
        "level": {
          "type": "string",
          "enum": ["HIGH", "MEDIUM", "LOW"],
          "description": "Confidence level in the finding"
        },
        "score": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Numerical confidence score (0.0 to 1.0)"
        },
        "reasoning": {
          "type": "string",
          "maxLength": 500,
          "description": "Explanation of confidence assessment"
        }
      },
      "additionalProperties": false
    },
    "impact": {
      "type": "object",
      "properties": {
        "financial": {
          "type": "object",
          "properties": {
            "risk_level": {
              "type": "string",
              "enum": ["CRITICAL", "HIGH", "MEDIUM", "LOW", "NEGLIGIBLE"]
            },
            "potential_loss": {
              "type": "string",
              "description": "Estimated potential financial impact"
            },
            "affected_funds": {
              "type": "string",
              "description": "Description of funds at risk"
            }
          }
        },
        "operational": {
          "type": "object",
          "properties": {
            "availability": {
              "type": "string",
              "enum": ["HIGH", "MEDIUM", "LOW", "NONE"]
            },
            "functionality": {
              "type": "string",
              "enum": ["COMPLETE_LOSS", "MAJOR_DEGRADATION", "MINOR_DEGRADATION", "NONE"]
            },
            "governance": {
              "type": "string",
              "enum": ["COMPLETE_COMPROMISE", "PARTIAL_COMPROMISE", "MINOR_IMPACT", "NONE"]
            }
          }
        },
        "reputation": {
          "type": "object",
          "properties": {
            "risk_level": {
              "type": "string",
              "enum": ["HIGH", "MEDIUM", "LOW", "NEGLIGIBLE"]
            },
            "description": {
              "type": "string",
              "maxLength": 500
            }
          }
        }
      },
      "additionalProperties": false
    },
    "exploitability": {
      "type": "object",
      "properties": {
        "ease": {
          "type": "string",
          "enum": ["TRIVIAL", "EASY", "MODERATE", "DIFFICULT", "VERY_DIFFICULT"],
          "description": "How easy it is to exploit this vulnerability"
        },
        "prerequisites": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Prerequisites needed to exploit the vulnerability"
        },
        "attack_vector": {
          "type": "string",
          "enum": ["NETWORK", "ADJACENT", "LOCAL", "PHYSICAL"],
          "description": "Attack vector classification"
        },
        "user_interaction": {
          "type": "string",
          "enum": ["NONE", "REQUIRED"],
          "description": "Whether user interaction is required"
        }
      },
      "additionalProperties": false
    },
    "evidence": {
      "type": "object",
      "properties": {
        "pattern_matches": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["pattern", "match"],
            "properties": {
              "pattern": {
                "type": "string",
                "description": "Security pattern that was matched"
              },
              "match": {
                "type": "string",
                "description": "Actual code that matched the pattern"
              },
              "confidence": {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              }
            }
          }
        },
        "static_analysis": {
          "type": "object",
          "properties": {
            "tool": {
              "type": "string",
              "description": "Static analysis tool used"
            },
            "rule": {
              "type": "string",
              "description": "Specific rule that triggered"
            },
            "output": {
              "type": "string",
              "description": "Raw tool output"
            }
          }
        },
        "ai_analysis": {
          "type": "object",
          "properties": {
            "model": {
              "type": "string",
              "description": "AI model used for analysis"
            },
            "reasoning": {
              "type": "string",
              "maxLength": 1000,
              "description": "AI reasoning for the finding"
            },
            "similarity_score": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "description": "Similarity to known vulnerable patterns"
            }
          }
        }
      },
      "additionalProperties": false
    },
    "metadata": {
      "type": "object",
      "properties": {
        "cwe_ids": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^CWE-\\d+$"
          },
          "description": "Common Weakness Enumeration identifiers"
        },
        "owasp_categories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "OWASP Smart Contract Top 10 categories"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 50
          },
          "description": "Additional tags for categorization",
          "maxItems": 20
        },
        "false_positive_likelihood": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Estimated likelihood this is a false positive"
        },
        "historical_incidents": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "year"],
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of historical incident"
              },
              "year": {
                "type": "integer",
                "minimum": 2009,
                "maximum": 2030
              },
              "loss_amount": {
                "type": "string",
                "description": "Financial loss from incident"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "maxItems": 5
        }
      },
      "additionalProperties": false
    },
    "timestamp": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 timestamp when finding was detected"
    },
    "scanner": {
      "type": "object",
      "required": ["name", "version"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the security scanner"
        },
        "version": {
          "type": "string",
          "description": "Version of the scanner"
        },
        "scan_id": {
          "type": "string",
          "description": "Unique identifier for this scan session"
        },
        "configuration": {
          "type": "object",
          "description": "Scanner configuration used"
        }
      },
      "additionalProperties": false
    },
    "remediation": {
      "type": "object",
      "properties": {
        "effort": {
          "type": "string",
          "enum": ["TRIVIAL", "LOW", "MEDIUM", "HIGH", "VERY_HIGH"],
          "description": "Estimated effort to fix the vulnerability"
        },
        "timeline": {
          "type": "string",
          "description": "Recommended timeline for remediation"
        },
        "priority": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10,
          "description": "Remediation priority (1 = highest, 10 = lowest)"
        },
        "status": {
          "type": "string",
          "enum": ["OPEN", "IN_PROGRESS", "FIXED", "WONT_FIX", "FALSE_POSITIVE"],
          "description": "Current remediation status"
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "examples": [
    {
      "id": "REENT_125",
      "severity": "HIGH",
      "title": "Reentrancy Attack in Withdrawal Function",
      "category": "REENTRANCY",
      "subcategory": "External Call Reentrancy",
      "description": "The withdraw() function is vulnerable to reentrancy attacks because it makes an external call before updating the internal balance state. An attacker can recursively call the withdraw function to drain the contract's funds.",
      "recommendation": {
        "summary": "Implement the Checks-Effects-Interactions pattern by updating the balance before making external calls",
        "details": "1. Update the user's balance to zero before making the external call\n2. Use the nonReentrant modifier from OpenZeppelin\n3. Consider using pull payment pattern instead of push payments",
        "code_example": "function withdraw() external {\n    uint amount = balances[msg.sender];\n    require(amount > 0, \"No balance\");\n    balances[msg.sender] = 0; // Update state first\n    (bool success, ) = msg.sender.call{value: amount}(\"\");\n    require(success, \"Transfer failed\");\n}",
        "references": [
          {
            "title": "Ethereum Smart Contract Best Practices - Reentrancy",
            "url": "https://consensys.github.io/smart-contract-best-practices/attacks/reentrancy/",
            "type": "best_practice"
          }
        ]
      },
      "location": {
        "file": "Wallet.sol",
        "line": 125,
        "function": "withdraw",
        "contract": "SimpleWallet",
        "code_snippet": "(bool success, ) = msg.sender.call{value: balances[msg.sender]}(\"\");\nrequire(success);\nbalances[msg.sender] = 0;"
      },
      "confidence": {
        "level": "HIGH",
        "score": 0.95,
        "reasoning": "Clear pattern match for reentrancy vulnerability with external call before state update"
      },
      "impact": {
        "financial": {
          "risk_level": "CRITICAL",
          "potential_loss": "Total contract balance",
          "affected_funds": "All user deposits stored in the contract"
        },
        "operational": {
          "availability": "HIGH",
          "functionality": "COMPLETE_LOSS",
          "governance": "NONE"
        }
      },
      "exploitability": {
        "ease": "MODERATE",
        "prerequisites": ["Contract must have Ether balance", "Attacker needs fallback function"],
        "attack_vector": "NETWORK",
        "user_interaction": "NONE"
      },
      "metadata": {
        "cwe_ids": ["CWE-841"],
        "owasp_categories": ["SC01:Reentrancy"],
        "tags": ["finance", "critical", "drain"],
        "historical_incidents": [
          {
            "name": "The DAO Attack",
            "year": 2016,
            "loss_amount": "$60 million",
            "url": "https://hackingdistributed.com/2016/06/18/analysis-of-the-dao-exploit/"
          }
        ]
      },
      "timestamp": "2024-01-15T14:30:00Z",
      "scanner": {
        "name": "AI Blockchain Analytics",
        "version": "2.1.0",
        "scan_id": "scan_789abc123"
      }
    }
  ]
}