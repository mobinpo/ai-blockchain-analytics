apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ai-blockchain-analytics-ingress
  namespace: ai-blockchain-analytics
  annotations:
    # AWS ALB Ingress Controller
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-path: /api/health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-2017-01
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:region:account:certificate/cert-id
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/group.name: ai-blockchain-analytics
    
    # Rate limiting
    alb.ingress.kubernetes.io/wafv2-acl-arn: arn:aws:wafv2:region:account:regional/webacl/name/id
    
    # Sticky sessions for WebSocket connections
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=86400
    
    # NGINX Ingress Controller (alternative)
    # kubernetes.io/ingress.class: nginx
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    # nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    # nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    # nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    # nginx.ingress.kubernetes.io/rate-limit: "100"
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  # TLS configuration
  tls:
  - hosts:
    - api.aiblockchainanalytics.com
    - app.aiblockchainanalytics.com
    secretName: ai-blockchain-analytics-tls
  
  rules:
  - host: api.aiblockchainanalytics.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: ai-blockchain-analytics-service
            port:
              number: 80
      - path: /telescope
        pathType: Prefix
        backend:
          service:
            name: ai-blockchain-analytics-service
            port:
              number: 80
      - path: /horizon
        pathType: Prefix
        backend:
          service:
            name: ai-blockchain-analytics-service
            port:
              number: 80
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: ai-blockchain-analytics-service
            port:
              number: 2112
      - path: /status
        pathType: Prefix
        backend:
          service:
            name: ai-blockchain-analytics-service
            port:
              number: 2114
  
  - host: app.aiblockchainanalytics.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ai-blockchain-analytics-service
            port:
              number: 80
---
# Network Policy for additional security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ai-blockchain-analytics-netpol
  namespace: ai-blockchain-analytics
spec:
  podSelector:
    matchLabels:
      app: ai-blockchain-analytics
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-controller
    ports:
    - protocol: TCP
      port: 8000
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 2112
    - protocol: TCP
      port: 2114
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - {} # Allow all outbound traffic (for external APIs)