apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-blockchain-analytics-app
  namespace: ai-blockchain-analytics
  labels:
    app: ai-blockchain-analytics
    tier: application
    component: web
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: ai-blockchain-analytics
      component: web
  template:
    metadata:
      labels:
        app: ai-blockchain-analytics
        tier: application
        component: web
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "2112"
        prometheus.io/path: "/metrics"
    spec:
      initContainers:
      - name: migrate
        image: your-registry/ai-blockchain-analytics:latest
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secret
        env:
        - name: CONTAINER_ROLE
          value: "migrate"
        command:
        - /bin/sh
        - -c
        - |
          echo "Waiting for database..."
          until nc -z $DB_HOST $DB_PORT; do sleep 2; done
          echo "Running migrations..."
          php artisan migrate --force
          echo "Clearing caches..."
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
      containers:
      - name: app
        image: your-registry/ai-blockchain-analytics:latest
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 2112
          name: metrics
        - containerPort: 2114
          name: status
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secret
        env:
        - name: CONTAINER_ROLE
          value: "app"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 12
        volumeMounts:
        - name: storage
          mountPath: /var/www/html/storage
        - name: cache
          mountPath: /var/www/html/bootstrap/cache
      volumes:
      - name: storage
        emptyDir: {}
      - name: cache
        emptyDir: {}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: ai-blockchain-analytics-service
  namespace: ai-blockchain-analytics
  labels:
    app: ai-blockchain-analytics
    component: web
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  - port: 2112
    targetPort: 2112
    protocol: TCP
    name: metrics
  - port: 2114
    targetPort: 2114
    protocol: TCP
    name: status
  selector:
    app: ai-blockchain-analytics
    component: web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-blockchain-analytics-worker
  namespace: ai-blockchain-analytics
  labels:
    app: ai-blockchain-analytics
    tier: application
    component: worker
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: ai-blockchain-analytics
      component: worker
  template:
    metadata:
      labels:
        app: ai-blockchain-analytics
        tier: application
        component: worker
    spec:
      containers:
      - name: worker
        image: your-registry/ai-blockchain-analytics:latest
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secret
        env:
        - name: CONTAINER_ROLE
          value: "worker"
        command:
        - /bin/sh
        - -c
        - |
          echo "Starting queue worker..."
          php artisan queue:work --queue=default,sentiment,onboarding-emails --sleep=3 --tries=3 --max-jobs=1000 --max-time=3600
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "ps aux | grep -v grep | grep 'queue:work'"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
      terminationGracePeriodSeconds: 60
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-blockchain-analytics-scheduler
  namespace: ai-blockchain-analytics
  labels:
    app: ai-blockchain-analytics
    tier: application
    component: scheduler
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: ai-blockchain-analytics
      component: scheduler
  template:
    metadata:
      labels:
        app: ai-blockchain-analytics
        tier: application
        component: scheduler
    spec:
      containers:
      - name: scheduler
        image: your-registry/ai-blockchain-analytics:latest
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secret
        env:
        - name: CONTAINER_ROLE
          value: "scheduler"
        command:
        - /bin/sh
        - -c
        - |
          echo "Starting scheduler..."
          while true; do
            php artisan schedule:run --verbose --no-interaction
            sleep 60
          done
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "100m"
      terminationGracePeriodSeconds: 30