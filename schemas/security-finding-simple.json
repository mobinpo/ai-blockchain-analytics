{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Simple Security Finding Schema",
  "description": "Minimal schema for basic security findings - matches user example format",
  "type": "object",
  "required": ["severity", "title", "line", "recommendation"],
  "properties": {
    "severity": {
      "type": "string",
      "enum": ["CRITICAL", "HIGH", "MEDIUM", "LOW", "INFO"],
      "description": "Risk severity level"
    },
    "title": {
      "type": "string",
      "minLength": 3,
      "maxLength": 100,
      "description": "Vulnerability title (e.g., 'Re-entrancy', 'Integer Overflow')"
    },
    "line": {
      "type": "integer",
      "minimum": 1,
      "description": "Line number where vulnerability occurs"
    },
    "recommendation": {
      "type": "string",
      "minLength": 10,
      "maxLength": 1000,
      "description": "Clear fix recommendation"
    },
    "category": {
      "type": "string",
      "enum": [
        "Re-entrancy",
        "Integer Overflow/Underflow",
        "Access Control", 
        "Input Validation",
        "Business Logic",
        "Gas Optimization",
        "Code Quality",
        "Cryptographic Issues",
        "Flash Loan Attack",
        "Oracle Manipulation",
        "Other"
      ],
      "description": "Vulnerability category"
    },
    "function": {
      "type": "string",
      "maxLength": 100,
      "description": "Function containing vulnerability"
    },
    "contract": {
      "type": "string", 
      "maxLength": 100,
      "description": "Contract containing vulnerability"
    },
    "description": {
      "type": "string",
      "maxLength": 500,
      "description": "Brief vulnerability description"
    },
    "impact": {
      "type": "string",
      "enum": ["FUND_LOSS", "UNAUTHORIZED_ACCESS", "SERVICE_DISRUPTION", "GAS_WASTE", "MINIMAL"],
      "description": "Impact type"
    },
    "confidence": {
      "type": "string",
      "enum": ["HIGH", "MEDIUM", "LOW"],
      "description": "Finding confidence level"
    }
  },
  "additionalProperties": false,
  "examples": [
    {
      "severity": "HIGH",
      "title": "Re-entrancy",
      "line": 125,
      "recommendation": "Implement checks-effects-interactions pattern by moving state changes before external calls. Add OpenZeppelin's ReentrancyGuard modifier."
    },
    {
      "severity": "MEDIUM", 
      "title": "Integer Overflow",
      "line": 89,
      "recommendation": "Use SafeMath library or upgrade to Solidity 0.8+ for automatic overflow protection."
    },
    {
      "severity": "LOW",
      "title": "Gas Optimization",
      "line": 203,
      "recommendation": "Use ++i instead of i++ in loops to save gas."
    }
  ]
}