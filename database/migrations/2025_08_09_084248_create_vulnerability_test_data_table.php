<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('vulnerability_test_data', function (Blueprint $table) {
            $table->id();
            $table->string('contract_name')->index();
            $table->string('vulnerability_type')->index();
            $table->enum('risk_level', ['critical', 'high', 'medium', 'low'])->index();
            $table->text('contract_code');
            $table->text('cleaned_code')->nullable();
            $table->json('expected_findings');
            $table->json('vulnerability_metadata')->nullable();
            $table->json('test_results')->nullable();
            $table->timestamp('last_tested_at')->nullable();
            $table->boolean('test_passed')->default(false);
            $table->text('test_notes')->nullable();
            $table->timestamps();

            // Indexes for efficient querying
            $table->index(['vulnerability_type', 'risk_level']);
            $table->index(['test_passed', 'last_tested_at']);
        });

        Schema::create('vulnerability_test_runs', function (Blueprint $table) {
            $table->id();
            $table->string('run_id')->unique();
            $table->timestamp('started_at');
            $table->timestamp('completed_at')->nullable();
            $table->integer('total_tests')->default(0);
            $table->integer('passed_tests')->default(0);
            $table->integer('failed_tests')->default(0);
            $table->decimal('success_rate', 5, 2)->nullable();
            $table->json('test_summary')->nullable();
            $table->text('notes')->nullable();
            $table->timestamps();

            $table->index(['started_at', 'success_rate']);
        });

        Schema::create('vulnerability_test_results', function (Blueprint $table) {
            $table->id();
            $table->foreignId('test_run_id')->constrained('vulnerability_test_runs')->onDelete('cascade');
            $table->foreignId('test_data_id')->constrained('vulnerability_test_data')->onDelete('cascade');
            $table->boolean('passed')->default(false);
            $table->json('detected_vulnerabilities')->nullable();
            $table->json('missed_vulnerabilities')->nullable();
            $table->json('false_positives')->nullable();
            $table->decimal('detection_accuracy', 5, 2)->nullable();
            $table->integer('processing_time_ms')->nullable();
            $table->text('error_message')->nullable();
            $table->timestamps();

            $table->index(['passed', 'detection_accuracy']);
            $table->index(['test_run_id', 'passed']);
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('vulnerability_test_results');
        Schema::dropIfExists('vulnerability_test_runs');
        Schema::dropIfExists('vulnerability_test_data');
    }
};