apiVersion: v1
kind: ConfigMap
metadata:
  name: monitoring-dashboard-config
  namespace: ai-blockchain-analytics
  labels:
    app: monitoring
    component: dashboard
data:
  grafana-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "AI Blockchain Analytics - Production Monitoring",
        "tags": ["ai-blockchain", "production", "sentry", "telescope"],
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Application Overview",
            "type": "stat",
            "targets": [
              {
                "expr": "rate(http_requests_total{job=\"roadrunner-app\"}[5m])",
                "legendFormat": "Requests/sec"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "reqps",
                "color": {"mode": "palette-classic"}
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Error Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "rate(http_requests_total{job=\"roadrunner-app\",status_code=~\"5..\"}[5m])",
                "legendFormat": "Error Rate"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "percent",
                "color": {"mode": "thresholds"},
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": null},
                    {"color": "yellow", "value": 5},
                    {"color": "red", "value": 10}
                  ]
                }
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          },
          {
            "id": 3,
            "title": "Response Time (95th percentile)",
            "type": "timeseries",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job=\"roadrunner-app\"}[5m]))",
                "legendFormat": "95th percentile"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "s",
                "color": {"mode": "palette-classic"}
              }
            },
            "gridPos": {"h": 8, "w": 24, "x": 0, "y": 8}
          },
          {
            "id": 4,
            "title": "Database Connections",
            "type": "timeseries",
            "targets": [
              {
                "expr": "db_connections_active{job=\"postgres\"}",
                "legendFormat": "Active Connections"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 16}
          },
          {
            "id": 5,
            "title": "Redis Memory Usage",
            "type": "timeseries",
            "targets": [
              {
                "expr": "redis_memory_used_bytes{job=\"redis\"} / redis_memory_max_bytes{job=\"redis\"} * 100",
                "legendFormat": "Memory Usage %"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 16}
          },
          {
            "id": 6,
            "title": "Queue Processing",
            "type": "timeseries",
            "targets": [
              {
                "expr": "queue_jobs_processed_total{job=\"horizon-worker\"}",
                "legendFormat": "Jobs Processed"
              },
              {
                "expr": "queue_jobs_failed_total{job=\"horizon-worker\"}",
                "legendFormat": "Jobs Failed"
              }
            ],
            "gridPos": {"h": 8, "w": 24, "x": 0, "y": 24}
          },
          {
            "id": 7,
            "title": "Sentry Error Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "rate(sentry_events_total[5m])",
                "legendFormat": "Sentry Events/sec"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "evtps",
                "color": {"mode": "thresholds"},
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": null},
                    {"color": "yellow", "value": 0.1},
                    {"color": "red", "value": 0.5}
                  ]
                }
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 32}
          },
          {
            "id": 8,
            "title": "Telescope Entries",
            "type": "timeseries",
            "targets": [
              {
                "expr": "telescope_entries_total",
                "legendFormat": "Total Entries"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 32}
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "30s"
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: ai-blockchain-analytics
  labels:
    app: grafana
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        component: monitoring
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-secret
              key: admin-password
        - name: GF_INSTALL_PLUGINS
          value: "grafana-piechart-panel,grafana-worldmap-panel"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: dashboard-config
          mountPath: /etc/grafana/provisioning/dashboards
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: dashboard-config
        configMap:
          name: monitoring-dashboard-config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: ai-blockchain-analytics
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: gp2
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: ai-blockchain-analytics
  labels:
    app: grafana
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: grafana
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-secret
  namespace: ai-blockchain-analytics
type: Opaque
stringData:
  admin-password: "CHANGE_ME_GRAFANA_ADMIN_PASSWORD"