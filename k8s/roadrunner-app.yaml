apiVersion: apps/v1
kind: Deployment
metadata:
  name: roadrunner-app
  namespace: ai-blockchain-analytics
  labels:
    app: roadrunner-app
    component: application
spec:
  replicas: 3
  selector:
    matchLabels:
      app: roadrunner-app
  template:
    metadata:
      labels:
        app: roadrunner-app
        component: application
    spec:
      initContainers:
      - name: migration
        image: your-registry/ai-blockchain-analytics:latest
        command: ['php', 'artisan', 'migrate', '--force']
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        volumeMounts:
        - name: app-storage
          mountPath: /var/www/storage
      containers:
      - name: roadrunner
        image: your-registry/ai-blockchain-analytics:latest
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 6001
          name: websocket
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        env:
        - name: CONTAINER_ROLE
          value: app
        - name: RR_WORKERS
          value: "8"
        - name: RR_MAX_JOBS
          value: "2000"
        - name: REDIS_HOST
          value: "redis-service"
        - name: DB_HOST
          value: "postgres-service"
        volumeMounts:
        - name: app-storage
          mountPath: /var/www/storage
        - name: cache-volume
          mountPath: /var/www/bootstrap/cache
        - name: rr-config
          mountPath: /var/www/html/.rr.yaml
          subPath: rr.yaml
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]
      volumes:
      - name: app-storage
        persistentVolumeClaim:
          claimName: app-storage-pvc
      - name: cache-volume
        emptyDir: {}
      - name: rr-config
        configMap:
          name: roadrunner-config
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app-storage-pvc
  namespace: ai-blockchain-analytics
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: efs  # Use EFS or equivalent shared storage
---
apiVersion: v1
kind: Service
metadata:
  name: roadrunner-app-service
  namespace: ai-blockchain-analytics
  labels:
    app: roadrunner-app
spec:
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  - port: 6001
    targetPort: 6001
    protocol: TCP
    name: websocket
  selector:
    app: roadrunner-app
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: roadrunner-app-hpa
  namespace: ai-blockchain-analytics
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: roadrunner-app
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: roadrunner-config
  namespace: ai-blockchain-analytics
data:
  rr.yaml: |
    version: '3'
    
    rpc:
      listen: tcp://127.0.0.1:6001
    
    server:
      command: "php worker.php"
      user: "www"
      group: "www"
    
    http:
      address: 0.0.0.0:8000
      middleware: ["gzip", "headers"]
      uploads:
        forbid: [".php", ".exe", ".bat"]
      trusted_subnets: ["10.0.0.0/8", "127.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"]
      headers:
        cors:
          allowed_origin: "*"
          allowed_headers: "*"
          allowed_methods: "GET,POST,PUT,DELETE,OPTIONS"
          allow_credentials: true
        response:
          X-Powered-By: "RoadRunner"
          Server: "AI-Blockchain-Analytics-K8s"
    
    logs:
      mode: production
      level: warn
      file_logger_options:
        log_output: "stdout"
    
    pool:
      num_workers: ${RR_WORKERS:-8}
      max_jobs: ${RR_MAX_JOBS:-2000}
      allocate_timeout: 60s
      destroy_timeout: 60s
      supervisor:
        max_worker_memory: 256
        ttl: 3600s
    
    metrics:
      address: localhost:2112
    
    status:
      address: 127.0.0.1:2114
    
    jobs:
      num_pollers: 4
      pipeline_size: 100000
      pool:
        num_workers: 8
        max_jobs: 2000
        allocate_timeout: 60s
        destroy_timeout: 60s
      pipelines:
        default:
          driver: redis
          config:
            addrs: ["${REDIS_HOST}:6379"]
            password: "${REDIS_PASSWORD}"
            db: 0
            pool_size: 20
      consume: ["default"]
    
    kv:
      default:
        driver: redis
        config:
          addrs: ["${REDIS_HOST}:6379"]
          password: "${REDIS_PASSWORD}"
          db: 1
          pool_size: 20